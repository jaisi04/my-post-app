{"ast":null,"code":"var _jsxFileName = \"/Users/prince.kumar/Downloads/my-post-app/src/components/Posts/Posts.js\";\nimport React from \"react\";\nimport \"./style.css\";\nconst tableHeaders = [\"No\", \"User Id\", \"Title\", \"Description\"];\n\nconst Posts = ({\n  posts,\n  page: currentPage,\n  pages,\n  filterKey,\n  error,\n  updateField,\n  toggleUser,\n  updatePage\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"logout\",\n    onClick: () => toggleUser(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"List Of Posts!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filterWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"no-margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Filter data as per title: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"filter\",\n    type: \"text\",\n    name: \"filterKey\",\n    value: filterKey,\n    onChange: updateField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), pages.length && /*#__PURE__*/React.createElement(\"select\", {\n    onChange: updatePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, pages.map(page => /*#__PURE__*/React.createElement(\"option\", {\n    key: page,\n    selected: page === currentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, page)))), posts.length ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, tableHeaders.map((header, i) => /*#__PURE__*/React.createElement(\"th\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, header)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, posts.map(({\n    id,\n    userId,\n    title,\n    body\n  }) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, userId), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, title), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, body)))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Fetching posts!...\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, error));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/prince.kumar/Downloads/my-post-app/src/components/Posts/Posts.js"],"names":["React","tableHeaders","Posts","posts","page","currentPage","pages","filterKey","error","updateField","toggleUser","updatePage","length","map","header","i","id","userId","title","body"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst tableHeaders = [\"No\", \"User Id\", \"Title\", \"Description\"];\r\n\r\nconst Posts = ({\r\n  posts,\r\n  page: currentPage,\r\n  pages,\r\n  filterKey,\r\n  error,\r\n  updateField,\r\n  toggleUser,\r\n  updatePage\r\n}) => {\r\n  return (\r\n    <div className=\"postWrapper\">\r\n      <button className=\"logout\" onClick={() => toggleUser()}>\r\n        Logout\r\n      </button>\r\n      <p>List Of Posts!</p>\r\n      <div className=\"filterWrapper\">\r\n        <label className=\"no-margin\">Filter data as per title: </label>\r\n        <input\r\n          className=\"filter\"\r\n          type=\"text\"\r\n          name=\"filterKey\"\r\n          value={filterKey}\r\n          onChange={updateField}\r\n        />\r\n        {pages.length && (\r\n          <select onChange={updatePage}>\r\n            {pages.map(page => (\r\n              <option key={page} selected={page === currentPage}>\r\n                {page}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n      </div>\r\n      {posts.length ? (\r\n        <React.Fragment>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {tableHeaders.map((header, i) => (\r\n                  <th key={i}>{header}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {posts.map(({ id, userId, title, body }) => (\r\n                <tr key={id}>\r\n                  <td>{id}</td>\r\n                  <td>{userId}</td>\r\n                  <td>{title}</td>\r\n                  <td>{body}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </React.Fragment>\r\n      ) : (\r\n        <p>Fetching posts!...</p>\r\n      )}\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}